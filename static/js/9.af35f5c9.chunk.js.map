{"version":3,"sources":["components/Header.jsx","components/Skills.jsx"],"names":["Header","props","title","React","createElement","className","styles","iconStyle","height","width","margin","marginBottom","introTextContainer","whiteSpace","Skills","_data$skills","header","data","setData","useState","useEffect","fetch","endpoints","skills","method","then","res","json","catch","err","Fragment","Fade","Container","intro","style","ReactMarkdown","children","map","rows","key","items","item","display","src","icon","alt","FallbackSpinner"],"mappings":"wHAAA,iCAaeA,UATf,SAAgBC,GACd,MAAM,MAAEC,GAAUD,EAClB,OAAOE,IAAAC,cAAA,OAAKC,UAAU,UAAUH,K,gCCNlC,sFASA,MAAMI,EAAS,CACbC,UAAW,CACTC,OAAQ,GACRC,MAAO,GACPC,OAAQ,GACRC,aAAc,GAEhBC,mBAAoB,CAClBC,WAAY,aA2DDC,UAvDf,SAAgBb,GAAQ,IAADc,EACrB,MAAM,OAAEC,GAAWf,GACZgB,EAAMC,GAAWC,mBAAS,MAiBjC,OATAC,oBAAU,KACRC,MAAMC,IAAUC,OAAQ,CACtBC,OAAQ,QAEPC,KAAMC,GAAQA,EAAIC,QAClBF,KAAMC,GAAQR,EAAQQ,IACtBE,MAAOC,GAAQA,IACjB,IAGD1B,IAAAC,cAAAD,IAAA2B,SAAA,KACE3B,IAAAC,cAACJ,UAAM,CAACE,MAAOc,IACdC,EACCd,IAAAC,cAAC2B,IAAI,KACH5B,IAAAC,cAAA,OAAKC,UAAU,6BACbF,IAAAC,cAAC4B,IAAS,MArBOC,EAsBIhB,EAAKgB,MArBlC9B,IAAAC,cAAA,MAAI8B,MAAO5B,EAAOM,oBAChBT,IAAAC,cAAC+B,IAAa,CAACC,SAAUH,MAqBL,QADkBlB,EAC7BE,EAAKM,cAAM,IAAAR,OAAA,EAAXA,EAAasB,IAAKC,GACjBnC,IAAAC,cAAA,OAAKmC,IAAKD,EAAKpC,OACbC,IAAAC,cAAA,WACAD,IAAAC,cAAA,UAAKkC,EAAKpC,OACToC,EAAKE,MAAMH,IAAKI,GACftC,IAAAC,cAAA,OAAKmC,IAAKE,EAAKvC,MAAOgC,MAAO,CAAEQ,QAAS,iBACtCvC,IAAAC,cAAA,OACE8B,MAAO5B,EAAOC,UACdoC,IAAKF,EAAKG,KACVC,IAAKJ,EAAKvC,QAEZC,IAAAC,cAAA,SAAIqC,EAAKvC,cAQrBC,IAAAC,cAAC0C,UAAe,OA1CGb","file":"static/js/9.af35f5c9.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../App.css';\r\n\r\nfunction Header(props) {\r\n  const { title } = props;\r\n  return <div className=\"header\">{title}</div>;\r\n}\r\n\r\nHeader.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Header;\r\n","import React, { useEffect, useState } from 'react';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport PropTypes from 'prop-types';\r\nimport Fade from 'react-reveal';\r\nimport { Container } from 'react-bootstrap';\r\nimport Header from './Header';\r\nimport endpoints from '../constants/endpoints';\r\nimport FallbackSpinner from './FallbackSpinner';\r\n\r\nconst styles = {\r\n  iconStyle: {\r\n    height: 75,\r\n    width: 75,\r\n    margin: 10,\r\n    marginBottom: 0,\r\n  },\r\n  introTextContainer: {\r\n    whiteSpace: 'pre-wrap',\r\n  },\r\n};\r\n\r\nfunction Skills(props) {\r\n  const { header } = props;\r\n  const [data, setData] = useState(null);\r\n\r\n  const renderSkillsIntro = (intro) => (\r\n    <h4 style={styles.introTextContainer}>\r\n      <ReactMarkdown children={intro} />\r\n    </h4>\r\n  );\r\n\r\n  useEffect(() => {\r\n    fetch(endpoints.skills, {\r\n      method: 'GET',\r\n    })\r\n      .then((res) => res.json())\r\n      .then((res) => setData(res))\r\n      .catch((err) => err);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Header title={header} />\r\n      {data ? (\r\n        <Fade>\r\n          <div className=\"section-content-container\">\r\n            <Container>\r\n              {renderSkillsIntro(data.intro)}\r\n              {data.skills?.map((rows) => (\r\n                <div key={rows.title}>\r\n                  <br />\r\n                  <h3>{rows.title}</h3>\r\n                  {rows.items.map((item) => (\r\n                    <div key={item.title} style={{ display: 'inline-block' }}>\r\n                      <img\r\n                        style={styles.iconStyle}\r\n                        src={item.icon}\r\n                        alt={item.title}\r\n                      />\r\n                      <p>{item.title}</p>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              ))}\r\n            </Container>\r\n          </div>\r\n        </Fade>\r\n      ) : <FallbackSpinner /> }\r\n    </>\r\n  );\r\n}\r\n\r\nSkills.propTypes = {\r\n  header: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Skills;\r\n"],"sourceRoot":""}